name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code on runner # Necessary to copy docker-compose.yml
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry # Necessary for VPS to docker pull
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to VPS
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no docker-compose.yml developer@${{ secrets.VPS_HOST }}:/home/developer/apps/frontend/pablomc20/docker-compose.yml

      - name: Deploy via SSH with Docker Compose
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no developer@${{ secrets.VPS_HOST }} << 'EOF'
            # Ensure the directory exists and the deploy user owns it
            sudo mkdir -p /home/developer/apps/frontend/pablomc20
            sudo chown -R developer:developer /home/developer/apps # Change ownership of the 'apps' directory and its contents
            sudo chmod -R 755 /home/developer/apps # Ensure read/write for owner, read/execute for others

            # Now, navigate and perform Docker Compose operations
            cd /home/developer/apps/frontend/pablomc20

            # ... (rest of your docker compose commands) ...
            echo "Stopping and removing existing Docker Compose services..."
            docker compose down || true 
            # ... (etc.) ...
          EOF

      # This 'Copy docker-compose.yml to VPS' step should remain as a separate SCP command
      # because it runs from the GitHub Actions runner directly.
      - name: Copy docker-compose.yml to VPS
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no docker-compose.yml developer@${{ secrets.VPS_HOST }}:/home/developer/apps/frontend/pablomc20/docker-compose.yml